<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="state__init_8cpp" kind="file" language="C++">
    <compoundname>state_init.cpp</compoundname>
    <includes refid="watch2_8h" local="yes">../watch2.h</includes>
    <includedby refid="states_8cpp" local="yes">main/states/states.cpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="16">
        <label>FS.h</label>
      </node>
      <node id="12">
        <label>SPI.h</label>
      </node>
      <node id="29">
        <label>TimeAlarms.h</label>
      </node>
      <node id="2">
        <label>../watch2.h</label>
        <link refid="watch2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="21">
        <label>BleKeyboard.h</label>
      </node>
      <node id="19">
        <label>WiFiClientSecure.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="20">
        <label>HTTPClient.h</label>
      </node>
      <node id="24">
        <label>cJSON.h</label>
      </node>
      <node id="14">
        <label>sdios.h</label>
      </node>
      <node id="28">
        <label>TimeLib.h</label>
      </node>
      <node id="31">
        <label>regret.h</label>
        <link refid="regret_8h"/>
      </node>
      <node id="13">
        <label>SdFat.h</label>
      </node>
      <node id="6">
        <label>stack</label>
      </node>
      <node id="15">
        <label>TFT_eSPI.h</label>
      </node>
      <node id="22">
        <label>Preferences.h</label>
      </node>
      <node id="1">
        <label>main/states/state_init.cpp</label>
        <link refid="state__init_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>Arduino.h</label>
      </node>
      <node id="27">
        <label>sys/time.h</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="23">
        <label>tinyexpr.h</label>
      </node>
      <node id="25">
        <label>sys/cdefs.h</label>
      </node>
      <node id="30">
        <label>coolcrab.h</label>
        <link refid="coolcrab_8h"/>
      </node>
      <node id="17">
        <label>JC_Button.h</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="18">
        <label>WiFi.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>main/states/states.cpp</label>
        <link refid="states_8cpp"/>
      </node>
      <node id="1">
        <label>main/states/state_init.cpp</label>
        <link refid="state__init_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="state__init_8cpp_1ad4625f1d437bfb66de76d248102d5c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void state_func_init</definition>
        <argsstring>()</argsstring>
        <name>state_func_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/states/state_init.cpp" line="3" column="6" bodyfile="main/states/state_init.cpp" bodystart="3" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../watch2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="state__init_8cpp_1ad4625f1d437bfb66de76d248102d5c45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state__init_8cpp_1ad4625f1d437bfb66de76d248102d5c45" kindref="member">state_func_init</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>variant<sp/>is<sp/>0,<sp/>this<sp/>state<sp/>just<sp/>switches<sp/>to<sp/>state<sp/>1<sp/>(watch<sp/>face)<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//doing<sp/>much.<sp/><sp/>if<sp/>the<sp/>down<sp/>button<sp/>is<sp/>held,<sp/>this<sp/>state<sp/>switches<sp/>to<sp/>variant<sp/>1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//which<sp/>will<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>wipe<sp/>their<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected_option<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//variant<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>system<sp/>after<sp/>waking<sp/>up<sp/>from<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//most<sp/>setup<sp/>is<sp/>done<sp/>in<sp/>the<sp/>deep<sp/>sleep<sp/>function,<sp/>but<sp/>code<sp/>in<sp/>the<sp/>deep<sp/>sleep<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//won&apos;t<sp/>be<sp/>executed<sp/>if<sp/>the<sp/>watch<sp/>is<sp/>being<sp/>turned<sp/>on<sp/>for<sp/>the<sp/>first<sp/>time<sp/>(whereas<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//code<sp/>will)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewatch2_1a51f311bab5fe7476b7f9608e21c03386" kindref="member">watch2::states</ref>[<ref refid="namespacewatch2_1a9041b045415e4077f6046a01f9ee31be" kindref="member">watch2::state</ref>].variant<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clear<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1ae6409853423f64360383769753ee7b8e" kindref="member">watch2::oled</ref>.fillScreen(0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dim<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>contrast<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//watch2::oled.sendCommand(0xC7,<sp/>&amp;contrast,<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//variant<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>will<sp/>give<sp/>the<sp/>user<sp/>a<sp/>menu,<sp/>which<sp/>will<sp/>allow<sp/>them<sp/>to<sp/>wipe<sp/>any<sp/>saved<sp/>system<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewatch2_1a51f311bab5fe7476b7f9608e21c03386" kindref="member">watch2::states</ref>[<ref refid="namespacewatch2_1a9041b045415e4077f6046a01f9ee31be" kindref="member">watch2::state</ref>].variant<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//settings<sp/>clear<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacewatch2_1ac13451e2babb790100abd526133d3d96" kindref="member">watch2::state_init</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1ae6409853423f64360383769753ee7b8e" kindref="member">watch2::oled</ref>.setCursor(0,<ref refid="namespacewatch2_1a537e061d07d7b4e7ebec72b3c2cf2eeb" kindref="member">watch2::top_thing_height</ref><sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//watch2::oled.setFreeFont(&amp;SourceSansPro_Regular6pt7b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1ae6409853423f64360383769753ee7b8e" kindref="member">watch2::oled</ref>.setTextColor(<ref refid="watch2_8h_1a87b537f5fa5c109d3c05c13d6b18f382" kindref="member">WHITE</ref>,<sp/><ref refid="watch2_8h_1a7b3b25cba33b07c303f3060fe41887f6" kindref="member">BLACK</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1ae6409853423f64360383769753ee7b8e" kindref="member">watch2::oled</ref>.print(</highlight><highlight class="stringliteral">&quot;Do<sp/>you<sp/>want<sp/>to<sp/>clear\nall<sp/>saved<sp/>settings?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="watch2_8h_1a2d665aca3619cd86b1dfe184756fa1c4" kindref="member">dpad_up_active</ref>()<sp/>||<sp/><ref refid="watch2_8h_1ad5ef942e8561d4b3c53ad44cb5d07969" kindref="member">dpad_down_active</ref>())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_option<sp/>=<sp/>!selected_option;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="watch2_8h_1a66985d8fefe0cba4188b8fdb31868104" kindref="member">draw</ref>(<ref refid="watch2_8h_1a4ef7d6208f02d770d700dd7bdcc3b184" kindref="member">dpad_any_active</ref>(),<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1a2cc92d218e6a0018de825886ad127676" kindref="member">watch2::drawMenu</ref>(2,<sp/>37,<sp/><ref refid="watch2_8h_1a2cd109632a6dcccaa80b43561b1ab700" kindref="member">SCREEN_WIDTH</ref><sp/>-<sp/>4,<sp/><ref refid="watch2_8h_1a6974d08a74da681b3957b2fead2608b8" kindref="member">SCREEN_HEIGHT</ref><sp/>-<sp/>37,<sp/>{</highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal">},<sp/>selected_option,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="watch2_8h_1a8d23feea868a983c8c2b661e1e16972f" kindref="member">RED</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="watch2_8h_1a103b2e40d6f57da2f6a41ed4ee7bffe8" kindref="member">dpad_enter_active</ref>())</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected_option<sp/>==<sp/>1)<sp/><ref refid="namespacewatch2_1a8be13348bd0da15ae712398954ef0b0f" kindref="member">watch2::preferences</ref>.clear();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1a786f5e96c939f6465c2341a31cad1385" kindref="member">watch2::switchState</ref>(1);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>down<sp/>button<sp/>for<sp/>settings<sp/>clearing<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewatch2_1a51f311bab5fe7476b7f9608e21c03386" kindref="member">watch2::states</ref>[<ref refid="namespacewatch2_1a9041b045415e4077f6046a01f9ee31be" kindref="member">watch2::state</ref>].variant<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(digitalRead(<ref refid="watch2_8h_1a20184c372e573af3754fc360d9fc8976" kindref="member">dpad_down</ref>))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1a786f5e96c939f6465c2341a31cad1385" kindref="member">watch2::switchState</ref>(<ref refid="namespacewatch2_1a9041b045415e4077f6046a01f9ee31be" kindref="member">watch2::state</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//switch<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1a786f5e96c939f6465c2341a31cad1385" kindref="member">watch2::switchState</ref>(1,<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/states/state_init.cpp"/>
  </compounddef>
</doxygen>
