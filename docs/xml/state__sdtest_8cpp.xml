<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="state__sdtest_8cpp" kind="file" language="C++">
    <compoundname>state_sdtest.cpp</compoundname>
    <includes refid="watch2_8h" local="yes">../watch2.h</includes>
    <includedby refid="states_8cpp" local="yes">main/states/states.cpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="16">
        <label>FS.h</label>
      </node>
      <node id="12">
        <label>SPI.h</label>
      </node>
      <node id="29">
        <label>TimeAlarms.h</label>
      </node>
      <node id="2">
        <label>../watch2.h</label>
        <link refid="watch2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="21">
        <label>BleKeyboard.h</label>
      </node>
      <node id="19">
        <label>WiFiClientSecure.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="20">
        <label>HTTPClient.h</label>
      </node>
      <node id="24">
        <label>cJSON.h</label>
      </node>
      <node id="14">
        <label>sdios.h</label>
      </node>
      <node id="28">
        <label>TimeLib.h</label>
      </node>
      <node id="31">
        <label>regret.h</label>
        <link refid="regret_8h"/>
      </node>
      <node id="13">
        <label>SdFat.h</label>
      </node>
      <node id="6">
        <label>stack</label>
      </node>
      <node id="15">
        <label>TFT_eSPI.h</label>
      </node>
      <node id="22">
        <label>Preferences.h</label>
      </node>
      <node id="26">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>main/states/state_sdtest.cpp</label>
        <link refid="state__sdtest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/time.h</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="23">
        <label>tinyexpr.h</label>
      </node>
      <node id="25">
        <label>sys/cdefs.h</label>
      </node>
      <node id="30">
        <label>coolcrab.h</label>
        <link refid="coolcrab_8h"/>
      </node>
      <node id="17">
        <label>JC_Button.h</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="18">
        <label>WiFi.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>main/states/states.cpp</label>
        <link refid="states_8cpp"/>
      </node>
      <node id="1">
        <label>main/states/state_sdtest.cpp</label>
        <link refid="state__sdtest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="state__sdtest_8cpp_1a34a6ea6d79fee5f939fd43f2f7fa5542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void state_func_SDtest</definition>
        <argsstring>()</argsstring>
        <name>state_func_SDtest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/states/state_sdtest.cpp" line="3" column="6" bodyfile="main/states/state_sdtest.cpp" bodystart="3" bodyend="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../watch2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="state__sdtest_8cpp_1a34a6ea6d79fee5f939fd43f2f7fa5542" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state__sdtest_8cpp_1a34a6ea6d79fee5f939fd43f2f7fa5542" kindref="member">state_func_SDtest</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>filename;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacewatch2_1ac13451e2babb790100abd526133d3d96" kindref="member">watch2::state_init</ref>)<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><ref refid="namespacewatch2_1ad3c8dbc95c3ea8d13157c707b402498d" kindref="member">watch2::beginFileSelect</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1ae6409853423f64360383769753ee7b8e" kindref="member">watch2::oled</ref>.setCursor(2,<sp/>42);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1ae6409853423f64360383769753ee7b8e" kindref="member">watch2::oled</ref>.print(String(filename.c_str()));</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1ad5f28b9617e94aa356abc56a2f7b438a" kindref="member">watch2::drawTopThing</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="watch2_8h_1a5869283f0cb7e68c72fb1849d7bb68d7" kindref="member">dpad_left_active</ref>())<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewatch2_1a786f5e96c939f6465c2341a31cad1385" kindref="member">watch2::switchState</ref>(2);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/states/state_sdtest.cpp"/>
  </compounddef>
</doxygen>
